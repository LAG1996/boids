{"version":3,"file":"main.js","sources":["../src/utils/utils.js","../src/classes/spherical-mesh.js","../src/model-rules/tree/trunk/tree-trunk.js","../src/model-rules/tree/canopy/canopy.js","../src/model-rules/tree/tree.js","../src/main.js"],"sourcesContent":["import * as THREE from 'three';\r\n\r\nexport const Utils = {\r\n\tsphericalToVector3(sphCoords) {\r\n\t\treturn new THREE.Vector3().setFromSpherical(new THREE.Spherical(sphCoords.radius, sphCoords.phi, sphCoords.theta));\r\n\t},\r\n\tvector3ToPointBuffer(vector3) {\r\n\t\treturn [ vector3.x, vector3.y, vector3.z ];\r\n\t},\r\n\tgetRandomSphericalCoord(funcs = {\r\n\t\tradiusFunc: (x) => { return x; },\r\n\t\tphiFunc: (x) => { return x; },\r\n\t\tthetaFunc: (x) => { return x; },\r\n\t}, config = {\r\n\t\tasVector3: false,\r\n\t}) {\r\n\t\tconst sph = {\r\n\t\t\tradius: funcs.radiusFunc ? funcs.radiusFunc(Math.random()) : Math.random(),\r\n\t\t\tphi: funcs.phiFunc ? funcs.phiFunc(Math.random()) : Math.random() * Math.PI * 2,\r\n\t\t\ttheta: funcs.thetaFunc ? funcs.thetaFunc(Math.random()) : Math.random() * Math.PI * 2,\r\n\t\t};\r\n\r\n\t\tif (config) {\r\n\t\t\tif (config.asVector3) {\r\n\t\t\t\treturn this.sphericalToVector3(sph.radius, sph.phi, sph.theta);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn sph;\r\n\t},\r\n\tclamp(x, min, max) {\r\n\t\treturn Math.max(min, Math.min(x, max));\r\n\t},\r\n\tmakeRandomNumberBetween(min = 0, max = 1) {\r\n\t\treturn (Math.random() * (max - min)) + min;\r\n\t},\r\n}","import * as THREE from 'three';\r\n\r\nexport class SphericalMesh {\r\n  constructor () {\r\n    this.points = [];\r\n    this.mesh = null;\r\n    this.obj3d = null;\r\n    this.meshColor = 0xffffff;\r\n  }\r\n\r\n  drawRule() {}\r\n\r\n  constructMesh() {\r\n    this.points = this.drawRule();\r\n\r\n    this.points = new Float32Array(this.points);\r\n    const geom = new THREE.BufferGeometry()\r\n      .setAttribute('position', new THREE.BufferAttribute(this.points, 3));\r\n\r\n    const pointMaterial = new THREE.PointsMaterial({ color: this.meshColor });\r\n    pointMaterial.sizeAttenuation = false;\r\n    this.mesh = new THREE.Points(geom, pointMaterial);\r\n\r\n    this.obj3d = new THREE.Object3D();\r\n    this.obj3d.add(this.mesh);\r\n  }\r\n}","/**\r\n * @author Luis Angel Garcia\r\n * This file defines the tree's trunk.\r\n * The trunk consists of the boundaries of\r\n * a number of \"kissing spheres\"\r\n */\r\nimport * as THREE from 'three';\r\nimport { Utils } from '../../../utils/utils.js';\r\nimport { MathUtils } from '../../../utils/math-utils.js';\r\nimport { SphericalMesh } from '../../../classes/spherical-mesh.js';\r\n\r\nexport class TreeTrunk {\r\n  constructor() {\r\n    this._pieces = [];\r\n\r\n    const numPieces = 16;\r\n    const pieceRadius = 3;\r\n    for (let i = 0; i < numPieces; i += 1) {\r\n      const newPiece = new TrunkPiece(pieceRadius, i / numPieces);\r\n\r\n      this._pieces.push(newPiece);\r\n    }\r\n\r\n    this.group = new THREE.Group();\r\n    this.group.add(...this._pieces.map(p => p.mesh));\r\n  }\r\n}\r\n\r\nclass TrunkPiece extends SphericalMesh {\r\n  constructor(radius, arcPosition) {\r\n    super();\r\n    this.radius = radius;\r\n    this.sliceRotation = -arcPosition * (2 * Math.PI) + Math.PI;\r\n    this.constructMesh();\r\n    this.setPosition(arcPosition);\r\n  }\r\n\r\n  drawRule() {\r\n    const points = [];\r\n    const iters = 250;\r\n\r\n    const startTheta = (.0325 * Math.PI);\r\n    const thetaArcSize = 2;\r\n\r\n    for (let i = 0; i < iters; i += 1) {\r\n      for (let k = 0; k < iters; k += 1) {\r\n        const phi = (Math.PI) * (k / iters);\r\n        const theta = (thetaArcSize * startTheta) * (i / iters) - ((startTheta) + this.sliceRotation);\r\n        const radius = this.radius;\r\n        \r\n        const sphr = Utils.sphericalToVector3({ phi, theta, radius });\r\n        sphr.y *= 1.75;\r\n\r\n        points.push(...Utils.vector3ToPointBuffer(sphr));\r\n      }\r\n    }\r\n\r\n    return points;\r\n  }\r\n\r\n  setPosition(arcPosition) {\r\n    const phi = Math.PI / 2;\r\n    const theta = 2 * Math.PI * arcPosition;\r\n    const radius =  this.radius * 1.4;\r\n\r\n    const position = Utils.sphericalToVector3({\r\n      phi,\r\n      theta,\r\n      radius,\r\n    });\r\n\r\n    this.mesh.translateX(position.x);\r\n    this.mesh.translateY(position.y);\r\n    this.mesh.translateZ(position.z);\r\n  }\r\n}\r\n","/**\r\n * @author Luis Angel Garcia\r\n * This file defines the tree's trunk.\r\n * The trunk consists of the boundaries of\r\n * a number of \"kissing spheres\"\r\n */\r\nimport * as THREE from 'three';\r\nimport { Utils } from '../../../utils/utils.js';\r\nimport { MathUtils } from '../../../utils/math-utils.js';\r\nimport { SphericalMesh } from '../../../classes/spherical-mesh.js';\r\n\r\nexport class Canopy {\r\n  constructor() {\r\n    this._pieces = [];\r\n\r\n    const numPieces = 16;\r\n    const pieceRadius = 3;\r\n    for (let i = 0; i < numPieces; i += 1) {\r\n      const newPiece = new CanopyPiece(pieceRadius, i / numPieces);\r\n\r\n      this._pieces.push(newPiece);\r\n    }\r\n\r\n    this.group = new THREE.Group();\r\n    this.group.add(...this._pieces.map(p => p.mesh));\r\n  }\r\n}\r\n\r\nclass CanopyPiece extends SphericalMesh {\r\n  constructor(radius, arcPosition) {\r\n    super();\r\n    this.radius = radius;\r\n    this.sliceRotation = -arcPosition * (2 * Math.PI);\r\n    this.arcPosition = arcPosition;\r\n    this.meshColor = 0x00ff00\r\n    this.constructMesh();\r\n  }\r\n\r\n  drawRule() {\r\n    const points = [];\r\n    const iters = 150;\r\n\r\n    const startTheta = Math.PI;\r\n    const thetaArcSize = 2;\r\n\r\n    for (let p = 0; p < 9; p +=1) {\r\n      const sPhi = Math.PI * (p / 9);\r\n      const sTheta = 2 * Math.PI * this.arcPosition;\r\n      const sRadius = this.radius * (1.4 * Math.random() + 0.25);\r\n      const sphrCoord = Utils.sphericalToVector3({ phi: sPhi, theta: sTheta, radius: sRadius });\r\n\r\n      for (let i = 0; i < iters; i += 1) {\r\n        for (let k = 0; k < iters; k += 1) {\r\n          const phi = (Math.PI) * (k / iters);\r\n          const theta = (thetaArcSize * startTheta) * (i / iters)//  - ((startTheta) + this.sliceRotation);\r\n          const radius = 1.5;\r\n          \r\n          const sphr = Utils.sphericalToVector3({ phi, theta, radius });\r\n          \r\n          // edit this sphere's coordinates\r\n          sphr.y += ((2.6 * this.radius) + sphrCoord.y) / (1.3);\r\n          sphr.x += sphrCoord.x * 1.15;\r\n          sphr.z += sphrCoord.z * 1.2;\r\n  \r\n          points.push(...Utils.vector3ToPointBuffer(sphr));\r\n        }\r\n      }\r\n    }\r\n\r\n    return points;\r\n  }\r\n\r\n  setPosition(arcPosition) {\r\n    for (let i = 0; i <= 4; i += 1) {\r\n      const phi = (Math.PI * i / 4);\r\n      const theta = 2 * Math.PI * arcPosition;\r\n      const radius =  this.radius * 1.4;\r\n    }\r\n\r\n    const position = Utils.sphericalToVector3({\r\n      phi,\r\n      theta,\r\n      radius,\r\n    });\r\n\r\n    this.mesh.translateX(position.x);\r\n    this.mesh.translateY(position.y);\r\n    this.mesh.translateZ(position.z);\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\nimport { TreeTrunk } from './trunk/tree-trunk.js';\r\nimport { Canopy } from './canopy/canopy.js';\r\n\r\nexport class Tree {\r\n  constructor() {\r\n    this._trunk = new TreeTrunk();\r\n    this._canopy = new Canopy();\r\n\r\n    this.group = new THREE.Group();\r\n    this.group.add(this._trunk.group);\r\n    this.group.add(this._canopy.group);\r\n  }\r\n}\r\n","import ENGINE from '@movinglinguini/three-boilerplate';\r\nimport * as THREE from 'three';\r\n\r\nimport { Tree } from './model-rules/tree/tree.js';\r\nimport { SphereWithin } from './model-rules/fun-spheres/sphere-within.js';\r\nimport { MultiDisk } from './model-rules/fun-spheres/multi-discs';\r\nimport { Sphere } from 'three';\r\n\r\nconst engine = new ENGINE();\r\n\r\n// const grid = new THREE.GridHelper(10, 10, 0x000000);\r\n// engine.addObject(grid);\r\n\r\nconst axisHelpers = new THREE.Group();\r\nconst xPoints = [ new THREE.Vector3(), new THREE.Vector3(100, 0, 0)];\r\nconst yPoints = [ new THREE.Vector3(), new THREE.Vector3(0, 100, 0)];\r\nconst zPoints = [ new THREE.Vector3(), new THREE.Vector3(0, 0, 100)];\r\n\r\naxisHelpers.add(\r\n  // x line \r\n  new THREE.Line(\r\n    new THREE.BufferGeometry().setFromPoints(xPoints),\r\n    new THREE.LineBasicMaterial({ color: 0xff0000 }),\r\n  ),\r\n  // y line\r\n  new THREE.Line(\r\n    new THREE.BufferGeometry().setFromPoints(yPoints),\r\n    new THREE.LineBasicMaterial({ color: 0x00ff00 }),\r\n  ),\r\n  // z line\r\n  new THREE.Line(\r\n    new THREE.BufferGeometry().setFromPoints(zPoints),\r\n    new THREE.LineBasicMaterial({ color: 0x0000ff }),\r\n  )\r\n);\r\n\r\nengine.addObject(axisHelpers);\r\n\r\n// the damping got annoying\r\nengine._orbitControls.enableDamping = false;\r\n\r\nconst tree = new Tree();\r\nengine.addObject(tree.group);\r\n// const multiDisk = new SphereWithin();\r\n// engine.addObject(multiDisk.mesh);\r\n\r\n"],"names":["THREE.Vector3","THREE.Spherical","THREE.BufferGeometry","THREE.BufferAttribute","THREE.PointsMaterial","THREE.Points","THREE.Object3D","THREE.Group","THREE.Line","THREE.LineBasicMaterial"],"mappings":"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"}